
TODO:
	show MIDI length in seconds.
	TextTrackWriter
	FingeringNavigator
		finger states



2017.9.23	K.L.	<k.l.lambda@gmail.com>

	+	Pianist/FingeringNavigator: added time cost statistics.
	+	Pianist/FingeringNavigator: added static context.


2017.9.22	K.L.	<k.l.lambda@gmail.com>

	+	FingeringNavigatorViewer: refined controller bar.

	+	FingeringGenerator: added track name display.


2017.9.21	K.L.	<k.l.lambda@gmail.com>

	>	MIDIPiano: fixed note off missing issue.
	>	NotationUtils: fixed note off missing issue.

	*!	MIDI note on event with 0 velocity means note off.

	+	Pianist/FingeringNavigator: added LeafSequence.


2017.9.19	K.L.	<k.l.lambda@gmail.com>

	+	FingeringGenerator: avoid fingering constraints overwrited after saving.


2017.9.18	K.L.	<k.l.lambda@gmail.com>

	+	FingeringNavigatorViewer: save source in storage.
	+	FingeringNavigatorViewer: file drag & drop added.

	+	Pianist/FingeringNavigator: constraits navigation implemented.

	+	NotationUtils: added fingering parsing in parseMidiTrack.

	>	Pianist/FingeringNavigator: added MinStepCount.

	+	Pianist/FingeringNavigator: candidate node added.

	>	Pianist/FingeringNavigator: refined progress bar.

	>	FingeringNavigatorViewer: refined focus scroll.


2017.9.17	K.L.	<k.l.lambda@gmail.com>

	>	Pianist/FingeringNavigator: EstimatedCosts update added.

	>	FingeringNavigatorViewer: refined styles.

	>	Pianist/FingeringNavigator: optimized current node searching.

	+	FingeringNavigatorViewer: added keyboard shortcuts.


2017.9.16	K.L.	<k.l.lambda@gmail.com>

	+	FingeringNavigatorViewer: step controller implemented.

	+	FingeringNavigatorViewer: created.

	+	Pianist/FingeringNavigator: added step index for tree node.


2017.9.15	K.L.	<k.l.lambda@gmail.com>

	+	FingeringGenerator: added adaption speed.

	+	Pianist/FingeringNavigator: refined structure.

	+	FingeringGenerator: added tree dump.

	+	Pianist/FingeringNavigator: evaluateChordStaticCost implemented.


2017.9.14	K.L.	<k.l.lambda@gmail.com>

	+	Pianist/Fingering: HandConfig.getFingerChordWristRange implemented.


2017.9.13	K.L.	<k.l.lambda@gmail.com>

	+	Pianist/FingeringNavigator: added progress bar.

	+	Pianist/FingeringNavigator: output result implemented.

	+	Pianist/FingeringNavigator: getFingerChoices implemented.


2017.9.12	K.L.	<k.l.lambda@gmail.com>

	+	Pianist/Piano: KeyPositions added.


2017.9.12	K.L.	<k.l.lambda@gmail.com>

	+	Pianist/Piano.cs: created.


2017.9.7	K.L.	<k.l.lambda@gmail.com>

	+	Pianist/FingeringNavigator: added estimated costs.

	+	Pianist/FingeringNavigator: added choice sequence.


2017.9.6	K.L.	<k.l.lambda@gmail.com>

	+	Pianist/Fingering: FingerConstants added.

	+	Pianist/FingeringNavigator: TreeNode class added.


2017.9.5	K.L.	<k.l.lambda@gmail.com>

	+	Pianist/Notation: NoteSequence added.

	+	NotationUtils: appendFingeringToMidiFile implemented.

	+	FingeringGenerator: added hand and track configs.

	+	HandConfigLibrary.cs created.


2017.9.4	K.L.	<k.l.lambda@gmail.com>

	+	NotationUtils.cs created.

	*	Fingering Navigator: heuristic breadth first search.

	+	Pianist/FingeringNavigator.cs: created.

	+	Pianist/Fingering.cs: created.
	+	Pianist/Notation.cs: created.


2017.8.31	K.L.	<k.l.lambda@gmail.com>

	>	FingeringGenerator: fixed signature text.


2017.8.30	K.L.	<k.l.lambda@gmail.com>

	+	FingeringGenerator: added method of clear.
	+	FingeringGenerator: added note field in marker.

	+	FingeringGenerator: added random marker sample.

	+	FingeringGeneratorEditor: generate pipeline added.

	+	FingeringGenerator: MIDI load implemented.
	+	FingeringGenerator: created.


2017.8.29	K.L.	<k.l.lambda@gmail.com>

	+	HandController: gear linkages implemented.


2017.8.23	K.L.	<k.l.lambda@gmail.com>

	+	MIDIPlayer: added PlayerPrefs to save media folder.

	+	PianoController: added rest keys.


2017.8.22	K.L.	<k.l.lambda@gmail.com>

	+	MIDIPiano: created.

	+	PianoController: created.

	+	MIDIPlayer: added MIDI sequence.


2017.8.21	K.L.	<k.l.lambda@gmail.com>

	*	Embed fingering information into MIDI stream by meta message of type Text and Marker.
			Text: Fingering by K.L.Pianist, fingering-marker-pattern:finger\(([\d,]+)\)
			Marker: finger(n[,n...])
				n=-5,-4,-3,-2,-1,1,2,3,4,5

	+	UI prefab MIDIPlayer created.

	+	MeshBuilder: added snap to integer for normal vector.


2017.8.20	K.L.	<k.l.lambda@gmail.com>

	+	Prefab of Piano added.
	+	Mesh of Shell added.

	+	Prefab of Keyboard added.

	+	Prefab of KeyGroup added.

	+	KeyModifier: mirror added.


2017.8.19	K.L.	<k.l.lambda@gmail.com>

	+	KeyModifier: setHollowX implemented.

	+	KeyModifier: script created.

	+	MeshBuilder: added inverse faces.

	*	key00 indices:
			1,2,7,6
			3,4,9,8
			27,32,33,29
			28,31,30,26
			22,20,38,36
			37,39,21,23
			24,34,35,25
			11,0,5,13
			14,1,0,11
			13,5,6,15
			18,16,1,14
			15,6,17,19
			1,1,0,0
			5,5,6,6
			0,1,6,5
			10,38,16,18
			19,17,39,12
			36,10,34,24
			25,35,12,37
			38,20,2,1
			38,1,16,38
			39,6,7,21
			17,6,39,17
			31,4,3,30
			32,8,9,33


2017.8.18	K.L.	<k.l.lambda@gmail.com>

	>	MeshBuilderEditor: keep guid when export mesh.


2017.8.16	K.L.	<k.l.lambda@gmail.com>

	+	MeshBuilderEditor: set the default name when empty.

	+	MeshBuilderEditor: highlight chosen pointer.

	+	MeshBuilder: added normal gizmo length config.

	+	MeshBuilder: added preview color config.

	+	Mesh of key_b added.
	+	Mesh of key0 added.


2017.8.15	K.L.	<k.l.lambda@gmail.com>

	+	MeshBuilder: import mesh implemented.

	+	MeshBuilder: register undo data when inspector changed.


2017.8.14	K.L.	<k.l.lambda@gmail.com>

	+	MeshBuilder: preview mesh shader added.

	+	MeshBuilder: loadPointers added.

	+	MeshBuilder: added normal inspector.

	+	MeshBuilder: added indices lines parse.

	+	MeshBuilderEditor.cs: draw mesh gizmo.

	+	MeshBuilder.cs: export mesh implemented.


2017.8.13	K.L.	<k.l.lambda@gmail.com>

	+	MeshBuilder.cs: added Face.

	+	MeshBuilderEditor.cs: draw gizmos for pointers.


2017.8.12	K.L.	<k.l.lambda@gmail.com>

	+	MeshBuilderEditor.cs: export mesh added.

	>	HandSkeleton.cs: fixed eular axis order.

	+	MeshBuilderEditor.cs: created.
	+	MeshBuilder.cs: created.


2017.8.11	K.L.	<k.l.lambda@gmail.com>

	>	HandControllerEditor.cs: limit gear range by rig data.


2017.8.10	K.L.	<k.l.lambda@gmail.com>

	+	HandControllerEditor.cs: display gears.

	+	HandController.cs: Gear implemented.

	+	HandControllerEditor.cs: created.

	*	Static posture solution:
			hand rig, tensity function -> tip point IK field per finger -> button IK field per finger -> chord composition field -> tensity minimum solution.
			IK field is 4 dimension: (x, y, z, key position in keyborad coordinate), field value is posture tensity


2017.8.9	K.L.	<k.l.lambda@gmail.com>

	>	HandSkeleton.cs: refined definitions.

	>	Color.shader: make compatible with lower Unity version.

	*	indices groups:
			Position indices:
				thumb0_z, thumb1_fz, thumb2_fz, thumb_tip,
				index0_fz, index1_fz, index2_fz, index3_fz, index_tip,
				middle0_fz, middle1_fz, middle2_fz, middle3_fz, middle_tip,
				ring0_fz, ring1_fz, ring2_fz, ring3_fz, ring_tip,
				pinky0_fz, pinky1_fz, pinky2_fz, pinky3_fz, pinky_tip,

			Fixed Rotation indices:
				thumb1_fz, thumb1_fy, thumb2_fz, thumb2_fy,
				index0_fz, index0_fy, index1_fz, index2_fz, index2_fy, index3_fz, index3_fy,
				middle0_fz, middle0_fy, middle1_fz, middle2_fz, middle2_fy, middle3_fz, middle3_fy,
				ring0_fz, ring0_fy, ring1_fz, ring2_fz, ring2_fy, ring3_fz, ring3_fy,
				pinky0_fz, pinky0_fy, pinky1_fz, pinky2_fz, pinky2_fy, pinky3_fz, pinky3_fy,

			Range Rotation indices:
				wrist_y, wrist_x, wrist_z,
				thumb0_z, thumb0_y, thumb0_x, thumb1_x, thumb2_x,
				index1_y, index1_x, index2_x, index3_x,
				middle1_y, middle1_x, middle2_x, middle3_x,
				ring1_y, ring1_x, ring2_x, ring3_x,
				pinky1_y, pinky1_x, pinky2_x, pinky3_x,

	*	Hand hierarchical skeleton: (front: Z+, up: Y+, right: X+)
			wrist_x
				wrist_y
					wrist_z
						thumb0_z
							thumb0_x
								thumb0_y
									thumb1_x
										thumb1_fy
											thumb1_fz
												thumb2_x
													thumb2_fy
														thumb2_fz
															thumb_tip
						index0_fx
							index0_fy
								index0_fz
									index1_x
										index1_y
											index1_fz
												index2_x
													index2_fy
														index2_fz
															index3_x
																index3_fy
																	index3_fz
																		index_tip
						middle0_fx
							middle0_fy
								middle0_fz
									middle1_x
										middle1_y
											middle1_fz
												middle2_x
													middle2_fy
														middle2_fz
															middle3_x
																middle3_fy
																	middle3_fz
																		middle_tip
						ring0_fx
							ring0_fy
								ring0_fz
									ring1_x
										ring1_y
											ring1_fz
												ring2_x
													ring2_fy
														ring2_fz
															ring3_x
																ring3_fy
																	ring3_fz
																		ring_tip
						pinky0_fx
							pinky0_fy
								pinky0_fz
									pinky1_x
										pinky1_y
											pinky1_fz
												pinky2_x
													pinky2_fy
														pinky2_fz
															pinky3_x
																pinky3_fy
																	pinky3_fz
																		pinky_tip


2017.8.8	K.L.	<k.l.lambda@gmail.com>

	+	HandRigDrawer.cs: created.

	+	SkeletonDrawing.unity created.


2017.8.7	K.L.	<k.l.lambda@gmail.com>

	+	HandRig.cs: created.

	+	HandSkeleton.cs: created.

	+	Shader of Color added.
	+	BoneMarker.cs: created.


2017.8.6	K.L.	<k.l.lambda@gmail.com>

	+	Unity project of Pianist Mobile setup.


2017.8.5	K.L.	<k.l.lambda@gmail.com>

	*	Hand rig structure:
			struct Rig
			{
				Vector3[]				Positions;
				float[]					Orientations;
				pair<float, float>[]	RotationRanges;
			}

		Position indices:
			thumb_z, thumb2, thumb3, thumb_tip,
			palm_index, index_y, index2, index3, index_tip,
			palm_middle, middle_y, middle2, middle3, middle_tip,
			palm_ring, ring_y, ring2, ring3, ring_tip,
			palm_pinky, pinky_y, pinky2, pinky3, pinky_tip,

		Orientation indices:
			wrist_y, wrist_x,
			thumb_z, thumb_y, thumb1, thumb2, thumb3,
			palm_index, index_y, index1, index2, index3,
			palm_middle, middle_y, middle1, middle2, middle3,
			palm_ring, ring_y, ring1, ring2, ring3,
			palm_pinky, pinky_y, pinky1, pinky2, pinky3,

		Range indices:
			wrist_y, wrist_x,
			thumb_z, thumb_y, thumb1, thumb2, thumb3,
			index_y, index1, index2, index3,
			middle_y, middle1, middle2, middle3,
			ring_y, ring1, ring2, ring3,
			pinky_y, pinky1, pinky2, pinky3,

	*	Hand hierarchical skeleton: (front: Z+, up: Y+, right: X+)
			wrist_y (ry)
				wrist_x (rx)
					thumb_z (rz, pos)
						thumb_y (ry)
							thumb1 (rx)
								thumb2 (rx, pos)
									thumb3 (rx, pos)
										thumb_tip (pos, shape)
					palm_index (pos)
						index_y (ry, pos)
							index1 (rx)
								index2 (rx, pos)
									index3 (rx, pos)
										index_tip (pos, shape)
					palm_middle (pos)
						middle_y (ry, pos)
							middle1 (rx)
								middle2 (rx, pos)
									middle3 (rx, pos)
										middle_tip (pos, shape)
					palm_ring (pos)
						ring_y (ry, pos)
							ring1 (rx)
								ring2 (rx, pos)
									ring3 (rx, pos)
										ring_tip (pos, shape)
					palm_pinky (pos)
						pinky_y (ry, pos)
							pinky1 (rx)
								pinky2 (rx, pos)
									pinky3 (rx, pos)
										pinky_tip (pos, shape)


2017.8.4	K.L.	<k.l.lambda@gmail.com>

	*	Project outline:
			Finger IK system
			Finger score generator engine
			Score reading vision system
			Mechanical hands playing system


	+	ChangeLog.txt: created.


------------------------------------------------------- Pianist ChangeLog -------------------------------------------------------
